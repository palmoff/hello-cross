name: Cross-Platform Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: ubuntu
            arch: x86_64
            target: x86_64-unknown-linux-gnu
            runner: ubuntu-latest

          - os: ubuntu
            arch: aarch64
            target: aarch64-unknown-linux-gnu
            runner: ubuntu-latest

          - os: macos
            arch: x86_64
            target: x86_64-apple-darwin
            runner: macos-13

          - os: macos
            arch: aarch64
            target: aarch64-apple-darwin
            runner: macos-14

          - os: windows
            arch: x86_64
            target: x86_64-pc-windows-msvc
            runner: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Install dependencies (for ARM Linux)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static binfmt-support gcc-aarch64-linux-gnu

      - name: Set linker for ARM Linux
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          mkdir -p .cargo
          echo -e '[target.aarch64-unknown-linux-gnu]\nlinker = "aarch64-linux-gnu-gcc"' > .cargo/config

      - name: Build
        run: cargo build --release --target=${{ matrix.target }}

      - name: Rename binary
        shell: bash
        run: |
          ext=""
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then ext=".exe"; fi
          mv target/${{ matrix.target }}/release/hello-cross target/${{ matrix.target }}/release/hello-${{ matrix.os }}-${{ matrix.arch }}$ext

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: hello-${{ matrix.os }}-${{ matrix.arch }}
          path: target/${{ matrix.target }}/release/hello-${{ matrix.os }}-${{ matrix.arch }}*
  
  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display artifacts
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}