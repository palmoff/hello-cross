name: Cross-Platform Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build for ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: ubuntu
            arch: x86_64
            target: x86_64-unknown-linux-gnu
            runner: ubuntu-latest

          - os: ubuntu
            arch: aarch64
            target: aarch64-unknown-linux-gnu
            runner: ubuntu-latest

          - os: macos
            arch: x86_64
            target: x86_64-apple-darwin
            runner: macos-13

          - os: macos
            arch: aarch64
            target: aarch64-apple-darwin
            runner: macos-14

          - os: windows
            arch: x86_64
            target: x86_64-pc-windows-msvc
            runner: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Install build dependencies (for Linux ARM)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: |
          cargo build --release --target=${{ matrix.target }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: hello-${{ matrix.os }}-${{ matrix.arch }}
          path: target/${{ matrix.target }}/release/hello-cross${{ matrix.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }}
